import numpy as np
from collections import OrderedDict

RANDOM_SEED = 10

USE_CHEAP_LOCA_MODEL = False
CHEAP_LOCA_NORMALISE_FOCUS_SHIFT = False
CHEAP_LOCA_CUTOFF = 0.1  # > 0.04 or so is not recommended

POLYCHROMATIC_NUM_WAVELENGTHS = 8
MODEL_WVLS = np.linspace(0.42, 0.67, POLYCHROMATIC_NUM_WAVELENGTHS + 2)[1:-1]
# MODEL_WVLS = np.array([0.575])

SPACIAL_FREQS = np.arange(2, 32, 2) / 64

SAVE_RESULTS = True

ENFORCE_BOUNDS_IN_COST = False

COST_WEIGHT_LINE_DIFF = 0e-1
COST_WEIGHT_MEAN_SQUARES = 100
COST_WEIGHT_PEAK_LOCATIONS = 0.000
COST_WEIGHT_PEAKINESS = 0.000

COST_WEIGHT_XMODS = 1.0

PRYSM_Q_FALLBACK = 2
DEFAULT_SAMPLES = 256
USE_CUDA = True
PRECISION = 64 if USE_CUDA else 64
CUDA_PROCESSES = 3
CUDA_CPU_PROCESSES = 3
CPU_GPU_FFTSIZE_BOUNDARY = 290
CPU_GPU_FFTSIZE_BOUNDARY_FINETUNE = False
MASK_CACHE_SIZE = 40

DF_STEP_TOLERANCE = 1.95

MAXITER = 400

DISABLE_MULTIPROCESSING = True

BASE_WAVELENGTH = 0.575

EXTREME_FOCUS_WEIGHT = 0.6
HIGH_FREQUENCY_WEIGHT = 0.95

PLOT_ALPHAS = np.array([1.00,.10,.10,1.00,.1,.10,1.00,.10])
PLOT_LINES = np.array([0,1,2,3,5,7,11,14])[PLOT_ALPHAS > 0.5]
PLOT_ALPHAS = PLOT_ALPHAS[PLOT_ALPHAS > 0.5]

DIVIDE_BY_APERTURE = lambda f, b=None: 1.0 / f
MULTIPLY_BY_APERTURE = lambda f, b=None: f
DIVIDE_BY_BASE_APERTURE = lambda f, b=None: 1.0 / b
MULTIPLY_BY_BASE_APERTURE = lambda f, b=None: b
NOP = lambda f, b=None: 1.0

ZERNIKE_SCHEME = "FRINGE"

COST_MULTIPLIER = 1

ZLIMIT = 5.0
ZINIT = 0

DEFAULT_SCALE = 2e-3

HIDDEN_COST_SCALE = 2e-3

OPT_PER_FOCUSSET = True
OPT_SHARED = False
OPT_PER_FIELD = "PER_FIELD"
PARAMS_OPTIONS = OrderedDict(
    # param_name=(Min, Initial, Max, normalise_with_aperture, per_focusset)
    df_offset=(None, None, None, NOP, OPT_PER_FOCUSSET, DEFAULT_SCALE),
    df_step=(0.07, 0.2, 0.7, lambda f, b: 1.0 / f, OPT_PER_FOCUSSET, DEFAULT_SCALE),
    df_each=(-0.05, 0.0, 0.05, NOP, OPT_PER_FIELD, DEFAULT_SCALE),
    z2=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z3=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z5=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z6=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z7=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z8=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z9=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z10=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z11=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z12=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z13=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z14=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z15=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z16=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z17=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z18=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z19=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z20=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z21=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z22=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z23=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z24=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z25=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z26=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z27=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z28=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z29=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z30=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z31=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z32=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z33=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z34=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z35=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    z36=(-ZLIMIT, ZINIT, ZLIMIT, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    fstop=(1 / 1.13, 1.00, 1.13, MULTIPLY_BY_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    loca=(-10, 0.0, 10, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    loca1=(-10, 0.0, 10, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    spca=(-20, 0.00, 20, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    spca2=(-20, 0.00, 20, DIVIDE_BY_BASE_APERTURE, OPT_SHARED, DEFAULT_SCALE),
    zero=(0, 0.0, 0.05, NOP, OPT_SHARED, DEFAULT_SCALE),
    a=(-0.7, 1.0, 1.3, NOP, OPT_SHARED, DEFAULT_SCALE),
    b=(-0.7, 1.0, 1.3, NOP, OPT_SHARED, DEFAULT_SCALE),
    v_amt=(0.2, 1.0, 1.5, NOP, OPT_SHARED, DEFAULT_SCALE),
    v_rad=(1.0, 1.0, 1.8, NOP, OPT_SHARED, DEFAULT_SCALE),
)

OPTIMISE_PARAMS = [
    'df_offset',
    'df_step',
    # 'df_each',
    'z2',
    'z3',
    'z5',
    'z6',
    'z7',
    'z8',
    'z9',
    'z10',
    'z11',
    'z12',
    'z13',
    'z14',
    'z15',
    'z16',
    'z17',
    'z18',
    'z19',
    'z20',
    'z21',
    'z22',
    'z23',
    'z24',
    'z25',
    'z26',
    'z27',
    'z28',
    'z29',
    'z30',
    'z31',
    'z32',
    'z33',
    'z34',
    'z35',
    'z36',
    'fstop',
    'loca1',
    'loca',
    'spca',
    'spca2',
    'v_amt',
    'v_rad'
    # 'a',
    # 'b',
    # 'zero',
]

# SCALE_EXTRA = np.abs(np.array([-2.30925090e-01,  2.05257769e-02,  2.11758741e-02,  2.21353192e-02,  2.28184778e-02,  2.10207242e-02,  8.22345531e+00,  8.80515373e+00,  9.90476505e+00,  8.14793071e+00,  8.40290885e+00, -1.76682208e-03, -1.43556309e-04,  1.10035290e-05, -1.74558343e-04, -4.09031045e-01,  2.41418327e-04,  4.67017792e-04, -9.13075117e-03,  6.87275416e-04, -5.40116043e-04, -1.81060123e-04,  3.26163625e-01, -3.29766256e-02, -7.01375558e-05,  3.16370694e-04,  1.73483070e-04, -1.84656862e-02,  9.94249735e-04,  1.03581598e-03,  1.14507296e-03, -1.81777548e-01,  1.24899450e-04, -4.94759960e-05,  3.90962976e-02,  1.50866599e-04,  1.35693251e-03,  1.35693251e-03, -8.09822895e-02,  3.89969572e-03,  2.63238828e-03,  2.53635768e-03, -8.06476643e-03]))
# SCALE_EXTRA = np.clip(SCALE_EXTRA, 1e-3, 1)
SCALE_EXTRA = np.ones((len(OPTIMISE_PARAMS) * 4,))
# SCALE_EXTRA[15:] = 1.0

USE_EXISTING_PARAMETER_IF_FIXED = False

if 'loca' in OPTIMISE_PARAMS and len(MODEL_WVLS) < 3:
    raise Exception("Cannot model LOCA with more wavelengths!")


FIXED_PARAMS = []
for key in PARAMS_OPTIONS.keys():
    if key not in OPTIMISE_PARAMS:
        FIXED_PARAMS.append(key)
